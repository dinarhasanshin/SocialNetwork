{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ProfilePage/ProfileInfo/ProfileInfo.module.css","components/ProfilePage/ProfilePage.module.css","components/ProfilePage/ProfilePosts/ProfilePosts.module.css","components/ProfilePage/ProfilePosts/PostItem/PostItem.module.css","components/ProfilePage/ProfileStatus/ProfileStatus.module.css","components/ProfilePage/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/ProfilePage/ProfileInfo/ProfileInfo.tsx","../node_modules/@iconify-icons/uil/thumbs-up.js","components/ProfilePage/ProfilePosts/PostItem/PostItem.tsx","components/ProfilePage/ProfilePosts/ProfilePosts.tsx","components/ProfilePage/ProfilePosts/ProfilePostsContainer.tsx","components/ProfilePage/ProfileStatus/ProfileStatus.tsx","assets/images/defaulIconProfileSquad.png","components/ProfilePage/ProfilePage.tsx","components/ProfilePage/ProfilePageContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","className","s","data_contacts","onSubmit","btn_editMode","data_contacts_header","Field","component","Input","type","name","placeholder","keys","contacts","map","key","ProfileData","props","isOwner","onClick","goToEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","saveProfile","useState","editMode","setEditMode","initialValues","formData","data","PostItem","post_item","content_block_size","post_item_header","post_item_img","src","photos","alt","post_name","username","post_item_bottom","message","post_item_reaction","icon","thumbsUp","post_like_icon","AddPostFormRedux","error","posts_input","posts_input_left","large","posts_img","userPhoto","posts_textarea","posts_btn_send","ProfilePosts","postsElements","profilePage","postsCollection","p","values","addPostProfile","newPostText","posts_collection","ProfilePostsContainer","connect","state","ProfileStatus","status","setStatus","useEffect","toggleEditMode","updateUserStatus","autoFocus","onBlur","onChange","e","currentTarget","profile_status_input","ProfilePage","savePhoto","profile_content","profile_left","profile_photo","photo_item_img","photo_item","photo_edit_btn_div","id","input_file","target","files","htmlFor","photo_edit_btn","profile_right","profile_data","content_block_size_right","data_header","fullName","ProfilePageContainer","this","setIsOwner","match","params","userId","history","setUserProfile","getUserStatus","refreshProfile","prevProps","prevState","PreLoader","React","Component","compose","auth","actions","setAuthUserProfile","withRouter"],"mappings":"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","file":"static/js/3.aaeb56d2.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_contacts\":\"ProfileInfo_data_contacts__3Mema\",\"data_contacts_header\":\"ProfileInfo_data_contacts_header__20I-0\",\"btn_editMode\":\"ProfileInfo_btn_editMode__2OnB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_content\":\"ProfilePage_profile_content__XX0VC\",\"content_block_size\":\"ProfilePage_content_block_size__3FQA-\",\"content_block_size_right\":\"ProfilePage_content_block_size_right__1GugH\",\"profile_left\":\"ProfilePage_profile_left__2y--H\",\"profile_photo\":\"ProfilePage_profile_photo__HEx3X\",\"photo_item\":\"ProfilePage_photo_item__2pd54\",\"photo_item_img\":\"ProfilePage_photo_item_img__1m2Fi\",\"input_file\":\"ProfilePage_input_file__1B5sc\",\"photo_edit_btn_div\":\"ProfilePage_photo_edit_btn_div__1uabv\",\"photo_edit_btn\":\"ProfilePage_photo_edit_btn__1LEh8\",\"profile_right\":\"ProfilePage_profile_right__3COf_\",\"profile_data\":\"ProfilePage_profile_data__19rTA\",\"data_header\":\"ProfilePage_data_header__3Mrm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block_size\":\"ProfilePosts_content_block_size__3pQ1d\",\"posts_input\":\"ProfilePosts_posts_input__2SwKp\",\"posts_input_left\":\"ProfilePosts_posts_input_left__AxypG\",\"posts_img\":\"ProfilePosts_posts_img__1QA9T\",\"posts_btn_send\":\"ProfilePosts_posts_btn_send__2miHd\",\"posts_textarea\":\"ProfilePosts_posts_textarea__3CQ3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block_size\":\"PostItem_content_block_size__3j-Ii\",\"post_item\":\"PostItem_post_item__LXAS-\",\"post_item_img\":\"PostItem_post_item_img__16rN_\",\"post_item_header\":\"PostItem_post_item_header__cw__-\",\"post_item_bottom\":\"PostItem_post_item_bottom__2Mjkf\",\"post_item_reaction\":\"PostItem_post_item_reaction__3XcT5\",\"post_like_icon\":\"PostItem_post_like_icon__3BuWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_status_input\":\"ProfileStatus_profile_status_input__1V78D\"};","// @ts-ignore\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../common/FormsControl/FormsControl\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\n\r\ntype ProfileInfoFormOwnPropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileInfoFormOwnPropsType> & ProfileInfoFormOwnPropsType > = ({ handleSubmit, profile }) => {\r\n    return(\r\n            <form className={s.data_contacts} onSubmit={ handleSubmit }>\r\n                <button className={s.btn_editMode}>Save</button>\r\n                <div className={s.data_contacts_header}>Job <hr/></div>\r\n                <ul>\r\n                    <li>FullName: <Field component={Input} type={\"text\"} name={\"fullName\"}/></li>\r\n\r\n                    <li>Looking for a job: <Field component={Input} type={\"checkbox\"} name={\"lookingForAJob\"} placeholder={\"JobLooking\"}/></li>\r\n\r\n                    <li>Skills: <Field component={Input} type={\"text\"}  name={\"lookingForAJobDescription\"} placeholder={\"ProfSkills\"}/></li>\r\n\r\n                    <li>AboutMe: <Field component={Input} type={\"text\"} name={\"aboutMe\"}/></li>\r\n                </ul>\r\n                <div className={s.data_contacts_header}>Contacts <hr/></div>\r\n                <ul>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <div> {key}: <Field component={Input} type={\"text\"} name={\"contacts.\" + key} placeholder={key}/> </div>\r\n                    })}\r\n                </ul>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<ProfileType, ProfileInfoFormOwnPropsType>({ form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\n// @ts-ignore\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport {ContactsType, ProfileType} from \"../../../types/types\";\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    saveProfile: (profile: ProfileType) => void,\r\n    profile: ProfileType,\r\n    isOwner: boolean\r\n\r\n}\r\n\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({saveProfile, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={ props.profile } profile={ props.profile } onSubmit={ onSubmit }/>\r\n                : <ProfileData goToEditMode={ () => { setEditMode(true) } } profile={ props.profile } isOwner={ props.isOwner }/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\ntype ProfileDataPropsType = {\r\n    goToEditMode: () => void,\r\n    isOwner: boolean,\r\n    profile: ProfileType\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = (props) => {\r\n    return(\r\n        <div className={s.data_contacts}>\r\n            {props.isOwner && <button className={s.btn_editMode} onClick={props.goToEditMode}>Edit</button>\r\n            }\r\n            <div className={s.data_contacts_header}>Job <hr/></div>\r\n            <ul>\r\n\r\n                <li> <b>Looking for a job:</b> { props.profile.lookingForAJob ? \"Yes\" : \"No\" }</li>\r\n\r\n                <li> <b>Skills:</b> { props.profile.lookingForAJobDescription\r\n                    ? props.profile.lookingForAJobDescription\r\n                    : \"NoDescription\" }</li>\r\n\r\n            </ul>\r\n            <div className={s.data_contacts_header}>AboutMe <hr/></div>\r\n            <ul>\r\n\r\n                <li>{ props.profile.aboutMe}</li>\r\n\r\n            </ul>\r\n            <div className={s.data_contacts_header}>Contacts <hr/></div>\r\n            <ul>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={ props.profile.contacts[key as keyof ContactsType] }/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype ContactPropsType = {\r\n    contactTitle: string | null,\r\n    contactValue: string | null\r\n}\r\n\r\nconst Contact: React.FC<ContactPropsType> = ({contactTitle, contactValue}) => {\r\n    return(\r\n        <li><b>{ contactTitle }:</b> {contactValue !== null && contactValue.length ? contactValue : \"NaN\"}</li>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","var data = {\n\t\"body\": \"<path d=\\\"M21.3 10.08A3 3 0 0 0 19 9h-4.56L15 7.57A4.13 4.13 0 0 0 11.11 2a1 1 0 0 0-.91.59L7.35 9H5a3 3 0 0 0-3 3v7a3 3 0 0 0 3 3h12.73a3 3 0 0 0 2.95-2.46l1.27-7a3 3 0 0 0-.65-2.46zM7 20H5a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1h2zm13-7.82l-1.27 7a1 1 0 0 1-1 .82H9v-9.79l2.72-6.12a2.11 2.11 0 0 1 1.38 2.78l-.53 1.43a2 2 0 0 0 1.87 2.7H19a1 1 0 0 1 .77.36a1 1 0 0 1 .23.82z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexport default data;\n","import React from 'react';\r\n// @ts-ignore\r\nimport s from \"./PostItem.module.css\";\r\nimport {InlineIcon} from \"@iconify/react\";\r\nimport thumbsUp from \"@iconify-icons/uil/thumbs-up\";\r\n\r\ntype PropsType = {\r\n    message: string,\r\n    username: string,\r\n    photos: string\r\n}\r\n\r\nconst PostItem: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.post_item   + \" \" + s.content_block_size}>\r\n            <div className={s.post_item_header}>\r\n                <img className={s.post_item_img} src={ props.photos } alt={\"\"}/>\r\n                <p className={s.post_name}>{ props.username }</p>\r\n            </div>\r\n            <div className={s.post_item_bottom}>\r\n                { props.message }\r\n            </div>\r\n            <hr/>\r\n            <div className={s.post_item_reaction}>\r\n                <InlineIcon icon={ thumbsUp } className={s.post_like_icon}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React from 'react';\r\n// @ts-ignore\r\nimport s from \"./ProfilePosts.module.css\";\r\nimport PostItem from \"./PostItem/PostItem\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControl/FormsControl\";\r\nimport {InitialStateType} from \"../../../redux/profile_reducer\";\r\nimport {ProfileType} from \"../../../types/types\";\r\n// @ts-ignore\r\nimport userPhoto from \"../../../assets/images/defaulIconProfile.png\";\r\n\r\nexport type MapStatePropsType = {\r\n    profilePage: InitialStateType,\r\n    isOwner: boolean\r\n\r\n}\r\nexport type MapDispatchPropsType = {\r\n    addPostProfile: (newPostText: string) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst ProfilePosts: React.FC<PropsType> = (props) => {\r\n    let postsElements = props.profilePage.postsCollection.map(\r\n        (p: { message: string; username: string; }) => <PostItem message={ p.message } username={ p.username }\r\n                                                                             photos={ props.profilePage.profile.photos.large }/>)\r\n\r\n    let addNewPost = (values: ProfilePostsFormValuesType) => {\r\n        props.addPostProfile(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.isOwner && <AddPostFormRedux onSubmit={ addNewPost } profile={ props.profilePage.profile }/>\r\n            }\r\n            <div className={s.posts_collection}>\r\n                { postsElements }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\ntype ProfilePostsFormValuesType = {\r\n    newPostText: string\r\n}\r\n\r\ntype ProfilePostsFormOwnProps = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<ProfilePostsFormValuesType, ProfilePostsFormOwnProps> & ProfilePostsFormOwnProps> =\r\n    ({handleSubmit, error, ...props}) => {\r\n    return(\r\n        <form className={s.posts_input  + \" \" + s.content_block_size} onSubmit={ handleSubmit }>\r\n            <div className={s.posts_input_left}>\r\n                {\r\n                    props.profile.photos.large\r\n                    ?<img src={props.profile.photos.large} alt=\"\" className={s.posts_img}/>\r\n                    :<img src={userPhoto} alt=\"\" className={s.posts_img}/>\r\n                }\r\n                <p />\r\n                <Field component={ Input } className={s.posts_textarea} name={ \"newPostText\" } placeholder={\"Enter your post\"}/>\r\n                {\r\n                    error !== null && <div>{ error }</div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <button className={s.posts_btn_send}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm<ProfilePostsFormValuesType, ProfilePostsFormOwnProps>({\r\n    form: 'postAdd'\r\n})(AddPostForm)\r\n\r\nexport default ProfilePosts;","import {addPostProfile, InitialStateType} from '../../../redux/profile_reducer';\r\nimport { connect } from \"react-redux\";\r\nimport ProfilePosts from \"./ProfilePosts\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: InitialStateType,\r\n    isOwner: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPostProfile: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return{\r\n        profilePage: state.profilePage,\r\n        isOwner: state.profilePage.isOwner\r\n    } as MapStatePropsType\r\n}\r\n\r\nconst ProfilePostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, { addPostProfile })(ProfilePosts)\r\n\r\nexport default ProfilePostsContainer;","import React, {useState, useEffect, ChangeEvent} from 'react';\r\n// @ts-ignore\r\nimport s from './ProfileStatus.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    status: string | null,\r\n    isOwner: boolean,\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        if (props.isOwner){\r\n            setEditMode(!editMode);\r\n            if(status)\r\n            props.updateUserStatus(status);\r\n        }\r\n\r\n    }\r\n\r\n    const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div> <span className={s.profile_status_input}\r\n                              onClick={() => {\r\n                                  toggleEditMode()\r\n                              }}>{props.status}</span></div>\r\n\r\n                : <div><input   autoFocus={true}\r\n                              onBlur={() => {toggleEditMode()}} value={status!== null ? status : \"\"}\r\n                              onChange={onStatusChange}/></div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;","export default __webpack_public_path__ + \"static/media/defaulIconProfileSquad.52829e75.png\";","import React, {ChangeEvent} from 'react';\r\n// @ts-ignore\r\nimport s from \"./ProfilePage.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfilePostsContainer from \"./ProfilePosts/ProfilePostsContainer\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n// @ts-ignore\r\nimport userPhoto from '../../assets/images/defaulIconProfileSquad.png';\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {InitialStateType} from \"../../redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType,\r\n    profilePage: InitialStateType,\r\n    savePhoto: (file: File) => void,\r\n    isOwner: boolean,\r\n    saveProfile: (profile: ProfileType) => void,\r\n    status: string | null,\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfilePage: React.FC<PropsType> = ({ savePhoto, isOwner, ...props }) => {\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length){\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <section className={s.profile_content}>\r\n                <div className={s.profile_left}>\r\n                    <div className={s.profile_photo + \" \" + s.content_block_size}>\r\n                        {props.profile === null || props.profile.photos.large == null\r\n                            ? <div className={s.photo_item_img}>\r\n                                <img src={userPhoto} alt=\"\"/>\r\n                        </div>\r\n                            : <img className={s.photo_item} src={props.profile.photos.large} alt={\"\"}/>}\r\n\r\n                        {isOwner\r\n                        && <div className={s.photo_edit_btn_div}>\r\n                            <input type={\"file\"} id={\"input_file\"} className={s.input_file} onChange={onMainPhotoSelected} />\r\n                            <label htmlFor={\"input_file\"} className={s.photo_edit_btn}>EditPhoto</label>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={s.profile_right}>\r\n                    <div className={s.profile_data + \" \" + s.content_block_size_right}>\r\n                        <div className={s.data_header}>\r\n                            <b><span className=\"Name\">{props.profile === null ? props.profilePage.profile.fullName : props.profile.fullName}</span></b>\r\n                            <ProfileStatus status={ props.status } isOwner={ isOwner } updateUserStatus={ props.updateUserStatus }/>\r\n                            <hr/>\r\n                        </div>\r\n                            <ProfileInfo profile={ props.profile }\r\n                                         isOwner={ isOwner } saveProfile={ props.saveProfile }/>\r\n                    </div>\r\n                    <ProfilePostsContainer/>\r\n                </div>\r\n            </section>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    actions,\r\n    getUserStatus, InitialStateType,\r\n    savePhoto,\r\n    saveProfile,\r\n    setUserProfile,\r\n    updateUserStatus\r\n} from '../../redux/profile_reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport {setAuthUserProfile} from \"../../redux/auth_reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport PreLoader from \"../common/PreLoader/PreLoader\";\r\n\r\ntype MapStatePropsType = {\r\n    userId: number | null,\r\n    profilePage: InitialStateType\r\n    profile: ProfileType,\r\n    status: string | null,\r\n    isOwner: boolean,\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (userId: number) => void,\r\n    getUserStatus: (userId: number) => void,\r\n    updateUserStatus: (status: string) => void,\r\n    savePhoto: (file: File) => void,\r\n    saveProfile: (profile: ProfileType) => void,\r\n    setIsOwner: (isOwner: boolean) => void,\r\n    setAuthUserProfile: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    \r\n}\r\n\r\ntype PathParams = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParams>\r\n\r\nclass ProfilePageContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        this.props.setIsOwner(!this.props.match.params.userId);\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.userId\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        if(userId) {\r\n            this.props.setUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps: PropsType, prevState: AppStateType) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.profile === null){\r\n            return /*<div>loading...</div>*/ <PreLoader/>\r\n        }\r\n        return(\r\n            <ProfilePage { ...this.props } profile={ this.props.profile } status={ this.props.status }\r\n                         updateUserStatus={ this.props.updateUserStatus }\r\n                         savePhoto={ this.props.savePhoto }/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return{\r\n        userId: state.auth.id,\r\n        profilePage: state.profilePage,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isOwner: state.profilePage.isOwner\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType >(mapStateToProps, { setUserProfile, getUserStatus, updateUserStatus, savePhoto,\r\n        saveProfile, setIsOwner: actions.setIsOwner, setAuthUserProfile }),\r\n    withRouter,\r\n)(ProfilePageContainer);"],"sourceRoot":""}