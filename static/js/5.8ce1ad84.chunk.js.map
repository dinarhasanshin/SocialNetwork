{"version":3,"sources":["components/PeoplesPage/PeoplesPage.module.css","components/PeoplesPage/PeopleItem/PeopleItem.module.css","components/PeoplesPage/PeoplesSearchForm/PeoplesSearchForm.module.css","components/common/Paginator/Paginator.module.css","hoc/withAuthRedirect.tsx","components/PeoplesPage/PeopleItem/PeopleItem.tsx","components/PeoplesPage/PeoplesSearchForm/PeoplesSearchForm.tsx","components/common/Paginator/Paginator.jsx","components/PeoplesPage/PeoplesPage.tsx","components/PeoplesPage/PeoplesPageContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","fake","to","PeopleItem","u","user","className","s","people_item","people_item_content","id","people_item_img_div","people_item_img","src","photos","small","userPhoto","alt","people_item_name","name","status","people_item_btn_div","followed","isFollowing","some","people_item_btn_disable","people_item_btn","onClick","e","unFollow","follow","React","memo","PeoplesSearchForm","onFilterChanged","search_form_item","initialValues","term","onSubmit","values","actions","setSubmitting","onSubmitFormik","isSubmitting","search_form_item_form","type","placeholder","disabled","Paginator","portionSize","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","paginator_page","filter","p","map","currentPage","selectedPage","page_item","onPageChanged","PeoplesPage","totalUserCount","friendsCollection","isFetching","toggleFriends","isFriends","peoples_content","peoples_left_content","content_block_size","PreLoader","peoples_right_content","content_block_size_right","multiple","onChange","target","value","selected","PeoplesPageContainer","pageNumber","getUsers","onFollow","userId","userFollow","onUnFollow","userUnFollow","setTermSearch","setIsFriends","render","this","Component","compose","friendsPage"],"mappings":"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","file":"static/js/5.8ce1ad84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"peoples_content\":\"PeoplesPage_peoples_content__2aoqD\",\"peoples_left_content\":\"PeoplesPage_peoples_left_content__2vXKG\",\"peoples_right_content\":\"PeoplesPage_peoples_right_content__1m3R-\",\"selected\":\"PeoplesPage_selected__3BD4X\",\"content_block_size\":\"PeoplesPage_content_block_size__33JgK\",\"content_block_size_right\":\"PeoplesPage_content_block_size_right__2JHfc\",\"toggle_peoples_container\":\"PeoplesPage_toggle_peoples_container__1z04K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block_size\":\"PeopleItem_content_block_size__2prB1\",\"people_item\":\"PeopleItem_people_item__2NXsX\",\"people_item_content\":\"PeopleItem_people_item_content__3qcq_\",\"people_item_img_div\":\"PeopleItem_people_item_img_div__aZcJ0\",\"people_item_img\":\"PeopleItem_people_item_img__1escg\",\"people_item_right\":\"PeopleItem_people_item_right__109Wa\",\"people_item_name\":\"PeopleItem_people_item_name__1ZN6S\",\"people_item_btn_div\":\"PeopleItem_people_item_btn_div__2dDFJ\",\"people_item_btn_disable\":\"PeopleItem_people_item_btn_disable__3Nz-O\",\"people_item_btn\":\"PeopleItem_people_item_btn__3y3Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_form_item\":\"PeoplesSearchForm_search_form_item__27hwn\",\"search_form_item_form\":\"PeoplesSearchForm_search_form_item_form__2nFvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1tGva\",\"paginator_page\":\"Paginator_paginator_page__ubJPB\",\"page_item\":\"Paginator_page_item__12Ygx\"};","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n    fake: () => void\r\n}\r\n\r\nfunction withAuthRedirect<WCP> (WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n\r\n        let {isAuth, fake, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import React from 'react';\r\n// @ts-ignore\r\nimport s from \"./PeopleItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// @ts-ignore\r\nimport userPhoto from \"../../../assets/images/defaulIconProfile.png\";\r\nimport {FriendsCollectionType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: FriendsCollectionType,\r\n    isFollowing: Array<number>,\r\n    follow: (userId: number ) => void,\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\nconst PeopleItem: React.FC<PropsType> = (props) => {\r\n    let u = props.user;\r\n    return (\r\n        <div className={s.people_item}>\r\n            <div className={s.people_item_content}>\r\n                <NavLink to={\"/profile/\" + u.id}>\r\n                    <div className={s.people_item_img_div}>\r\n                        <p className={s.people_item_img}>\r\n                           <img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\"/>\r\n                        </p>\r\n                    </div>\r\n                </NavLink>\r\n                <div className={s.people_item_name}>\r\n                    <span>{u.name}</span>\r\n                    {u.status && <span> | {u.status}</span>}\r\n\r\n                </div>\r\n                <div className={s.people_item_btn_div}>\r\n                    {u.followed\r\n                        ? <button\r\n                            className={props.isFollowing.some(id => id === u.id)\r\n                                ? s.people_item_btn_disable\r\n                                : s.people_item_btn} onClick={(e) =>\r\n                        {props.unFollow(u.id)}}>UnFollow</button>\r\n                        : <button\r\n                            className={props.isFollowing.some(id => id === u.id)\r\n                                ? s.people_item_btn_disable\r\n                                : s.people_item_btn} onClick={(e) =>\r\n                        {props.follow(u.id)}}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(PeopleItem);","import {Field, Form, Formik, FormikHelpers, FormikValues} from \"formik\";\nimport React from \"react\";\n// @ts-ignore\nimport s from './PeoplesSearchForm.module.css';\n\ntype MyFormValuesType = {\n    term: string;\n}\n\ntype PropsType = {\n    onFilterChanged: (term: string) => void\n}\n\nconst PeoplesSearchForm:React.FC<PropsType> = ({onFilterChanged}) => {\n\n    const initialValues: MyFormValuesType = {term: ''};\n\n    const onSubmitFormik = (values: FormikValues, actions: FormikHelpers<MyFormValuesType>) => {\n        onFilterChanged(values.term);\n        values.term = '';\n        actions.setSubmitting(false);\n    }\n\n    return (\n        <div className={s.search_form_item}>\n            <hr/>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(values, actions) => {\n                    onSubmitFormik(values, actions)\n                }}\n            >\n                {({isSubmitting}) => (\n                    <Form className={s.search_form_item_form}>\n                        <Field type=\"text\" name=\"term\" placeholder=\"Search other peoples\"/>\n                        <button type=\"submit\" disabled={isSubmitting}>Find</button>\n                    </Form>\n                )}\n            </Formik>\n            <hr/>\n        </div>\n    );\n}\n\nexport default PeoplesSearchForm;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({portionSize = 10, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.paginator_page}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={ () => {setPortionNumber(portionNumber - 1)}}>&lt; &lt;</button>}\r\n\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n                    .map(p => {\r\n                    return <span className={props.currentPage === p ? s.selectedPage : \"\" + \" \" + s.page_item}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })\r\n            }\r\n\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={ () => { setPortionNumber(portionNumber + 1) } }>&gt; &gt;</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Paginator);","import React, {ChangeEvent} from 'react';\r\n// @ts-ignore\r\nimport s from './PeoplesPage.module.css';\r\nimport PeopleItem from \"./PeopleItem/PeopleItem\";\r\nimport {FriendsCollectionType} from \"../../types/types\";\r\nimport PeoplesSearchForm from \"./PeoplesSearchForm/PeoplesSearchForm\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport PreLoader from \"../common/PreLoader/PreLoader\";\r\n\r\ntype PropsTypes = {\r\n    currentPage: number,\r\n    totalUserCount: number,\r\n    pageSize: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    onFilterChanged: (term: string) => void\r\n    friendsCollection: Array<FriendsCollectionType>,\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n    isFollowing: Array<number>,\r\n    isFetching: boolean,\r\n    toggleFriends: (isFriends: boolean | null) => void,\r\n    isFriends: boolean | null\r\n}\r\n\r\nconst PeoplesPage: React.FC<PropsTypes> = (\r\n    {currentPage, totalUserCount,pageSize,\r\n        onPageChanged, friendsCollection, unFollow,\r\n        follow, isFollowing, onFilterChanged, isFetching, toggleFriends, isFriends}) => {\r\n\r\n    const toggleFriendsChange = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        let isFriends: string = e.target.value;\r\n        if (isFriends === \"true\"){\r\n            toggleFriends(true);\r\n        }else if(isFriends === \"false\"){\r\n            toggleFriends(false);\r\n        }else if(isFriends === \"null\"){\r\n            toggleFriends(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={s.peoples_content}>\r\n            <div className={s.peoples_left_content + \" \" + s.content_block_size}>\r\n                <Paginator currentPage={currentPage} totalItemsCount={totalUserCount}\r\n                           pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n\r\n                <PeoplesSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n                {\r\n                    isFetching\r\n                        ? <PreLoader/>\r\n                        : friendsCollection.map(u =>\r\n                            <PeopleItem key={u.id} user={u} unFollow={unFollow}\r\n                                        follow={follow} isFollowing={isFollowing}/>)\r\n\r\n                }\r\n            </div>\r\n\r\n            <div className={s.peoples_right_content + \" \" + s.content_block_size_right}>\r\n                <select multiple={ true } onChange={toggleFriendsChange}>\r\n                    <option className={ isFriends === null&& s.selected } value=\"null\" selected>All</option>\r\n                    <option className={ isFriends === true&& s.selected } value=\"true\">Friends</option>\r\n                    <option className={ isFriends === false&& s.selected } value=\"false\">Other Peoples</option>\r\n                </select>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(PeoplesPage);\r\n\r\n/*\r\nfriendsCollection.map(u =>\r\n                            <PeopleItem key={u.id} user={u} unFollow={unFollow}\r\n                                        follow={follow} isFollowing={isFollowing}/>)\r\n*/\r\n\r\n","import React from 'react';\r\nimport {getUsers, userFollow, userUnFollow, actions} from '../../redux/peoples_reducer';\r\nimport {connect} from \"react-redux\";\r\n// @ts-ignore\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport PeoplesPage from \"./PeoplesPage\";\r\nimport {FriendsCollectionType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friendsCollection: Array<FriendsCollectionType>,\r\n    pageSize: number,\r\n    totalUserCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isFollowing: Array<number>,\r\n    isFriends: boolean | null,\r\n    term: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number, term?: string, isFriends?: boolean | null) => void,\r\n    userFollow: (userId: number) => void,\r\n    userUnFollow: (userId: number) => void,\r\n    setIsFriends: (isFriends: boolean | null) => void,\r\n    setTermSearch: (term: string) => void\r\n}\r\ntype OwnPropsType ={}\r\n\r\n\r\ntype PropsTypes = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass PeoplesPageContainer extends React.Component<PropsTypes> {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n        this.props.setIsFriends(null);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        let {pageSize, isFriends, term} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize, term, isFriends);\r\n    }\r\n\r\n    onFollow = (userId: number) => {\r\n        this.props.userFollow(userId);\r\n    }\r\n\r\n    onUnFollow = (userId: number) => {\r\n        this.props.userUnFollow(userId);\r\n    }\r\n\r\n    onFilterChanged = (term: string) => {\r\n        let {pageSize, isFriends} = this.props;\r\n\r\n        this.props.getUsers(1, pageSize, term, isFriends)\r\n        this.props.setTermSearch(term);\r\n    }\r\n    toggleFriends = (isFriends: boolean | null) => {\r\n        let {pageSize} = this.props;\r\n        this.props.setIsFriends(isFriends);\r\n        this.props.getUsers(1, pageSize, '', isFriends);\r\n    }\r\n\r\n    render = () => {\r\n        return <>\r\n            <PeoplesPage totalUserCount={this.props.totalUserCount} pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage} onPageChanged={this.onPageChanged}\r\n                         friendsCollection={this.props.friendsCollection} isFetching={this.props.isFetching}\r\n                         follow={this.onFollow} onFilterChanged={this.onFilterChanged} isFriends={this.props.isFriends}\r\n                         unFollow={this.onUnFollow} isFollowing={this.props.isFollowing} toggleFriends={this.toggleFriends}/>\r\n        </>\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return{\r\n        friendsCollection: state.friendsPage.friendsCollection,\r\n        pageSize: state.friendsPage.pageSize,\r\n        totalUserCount: state.friendsPage.totalUserCount,\r\n        currentPage: state.friendsPage.currentPage,\r\n        isFetching: state.friendsPage.isFetching,\r\n        isFollowing: state.friendsPage.isFollowing,\r\n        isFriends: state.friendsPage.filter.isFriends,\r\n        term: state.friendsPage.filter.term\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    //<TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n        mapStateToProps,\r\n        {getUsers, userFollow, userUnFollow, setIsFriends: actions.setIsFriends, setTermSearch: actions.setTermSearch}),\r\n    withAuthRedirect,\r\n    React.memo\r\n)(PeoplesPageContainer);"],"sourceRoot":""}